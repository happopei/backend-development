apiVersion: apps/v1
kind: Deployment
metadata: { name: api, labels: { app: api } }
spec:
  replicas: 2
  selector: { matchLabels: { app: api } }
  template:
    metadata: { labels: { app: api, tier: backend } }
    spec:
      securityContext: { runAsNonRoot: true }
      containers:
        - name: api
          image: nest-api:latest
          imagePullPolicy: IfNotPresent
          ports: [{ name: http, containerPort: 3000 }]
          # Hardcode first (we'll externalize later)
          env:
            - { name: NODE_ENV, value: production }
            - { name: REDIS_HOST, value: redis }      # will resolve once Service exists
            - { name: REDIS_PORT, value: "6379" }
            - { name: DB_HOST,    value: postgres }   # will resolve once Service exists
            - { name: DB_PORT,    value: "5432" }
            - { name: DB_USER,    value: appuser }
            - { name: DB_PASS,    value: supersecret }
            - { name: DB_NAME,    value: appdb }
          readinessProbe:
            httpGet: { path: /health, port: 3000 }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /health, port: 3000 }
            initialDelaySeconds: 15
            periodSeconds: 10